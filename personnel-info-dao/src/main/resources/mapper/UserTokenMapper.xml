<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byd.personnel.dao.mapper.UserTokenMapper">

    <resultMap type="com.byd.personnel.common.entity.UserTokenEntity" id="UserTokenResultMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
        <result property="expiratedTime" column="expirated_time" jdbcType="OTHER"/>
    </resultMap>

    <sql id="table_field">
      id, user_id, user_name, token, expirated_time      
    </sql>
       
    <!--通过Id查询单个-->
    <select id="getById" resultMap="UserTokenResultMap" parameterType="java.lang.Long">
        select
          <include refid="table_field" />
        from user_token
        where  id= #{id,jdbcType=BIGINT}
    </select>

    <!--通过实体不为空的属性作为筛选条件查询列表-->
    <select id="listByEntity" resultMap="UserTokenResultMap" parameterType="com.byd.personnel.common.entity.UserTokenEntity">
        select
          <include refid="table_field" />
        from user_token
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="userName != null">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="token != null">
                and token = #{token,jdbcType=VARCHAR}
            </if>
            <if test="expiratedTime != null">
                and expirated_time = #{expiratedTime,jdbcType=OTHER}
            </if>
        </where>
    </select>

    <!--通过实体不为空的属性作为筛选条件查询单个-->
    <select id="getByEntity" resultMap="UserTokenResultMap" parameterType="com.byd.personnel.common.entity.UserTokenEntity">
        select
          <include refid="table_field" />
        from user_token
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="userName != null">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="token != null">
                and token = #{token,jdbcType=VARCHAR}
            </if>
            <if test="expiratedTime != null">
                and expirated_time = #{expiratedTime,jdbcType=OTHER}
            </if>
        </where>
    </select>

    <!--通过Id列表作为筛选条件查询列表，列表长度不为0-->
    <select id="listByIds" resultMap="UserTokenResultMap" parameterType="list">
        select
          <include refid="table_field" />
        from user_token
        where  id in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
            #{item}
        </foreach>
    </select>

    <!--新增实体属性不为null的列-->
    <insert id="insert" keyProperty="" useGeneratedKeys="true" parameterType="com.byd.personnel.common.entity.UserTokenEntity">
        insert into user_token
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="id != null">
             id,
          </if>
          <if test="userId != null">
             user_id,
          </if>
          <if test="userName != null">
             user_name,
          </if>
          <if test="token != null">
             token,
          </if>
          <if test="expiratedTime != null">
             expirated_time,
          </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
          <if test="id != null">
             #{id,jdbcType=INTEGER},
          </if>
          <if test="userId != null">
             #{userId,jdbcType=INTEGER},
          </if>
          <if test="userName != null">
             #{userName,jdbcType=VARCHAR},
          </if>
          <if test="token != null">
             #{token,jdbcType=VARCHAR},
          </if>
          <if test="expiratedTime != null">
             #{expiratedTime,jdbcType=OTHER},
          </if>
        </trim>
    </insert>

    <!--批量新增所有列，列表长度不能为0，且列表id统一为null或者统一不为null-->
    <insert id="insertBatch" keyProperty="" useGeneratedKeys="true" parameterType="list">
        insert into user_token
         (id, user_id, user_name, token, expirated_time)
        values
        <foreach item="item" collection="list" separator="," open="" close="" index="index">
         (#{item.id}, #{item.userId}, #{item.userName}, #{item.token}, #{item.expiratedTime})
        </foreach>
    </insert>

    <!--通过主键修改实体属性不为null的列-->
    <update id="update" parameterType="com.byd.personnel.common.entity.UserTokenEntity">
        update user_token
        <set>
            <if test="id != null">
                id = #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="token != null and token != ''">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="expiratedTime != null">
                expirated_time = #{expiratedTime,jdbcType=OTHER},
            </if>
        </set>
        where  id= #{id,jdbcType=BIGINT}
    </update>

    <!--通过表字段修改实体属性不为null的列-->
    <update id="updateByField">
        update user_token
        <set>
            <if test="where.id == null and set.id != null">
                id = #{set.id,jdbcType=INTEGER},
            </if>
            <if test="where.userId == null and set.userId != null">
                user_id = #{set.userId,jdbcType=INTEGER},
            </if>
            <if test="where.userName == null and set.userName != null and set.userName != ''">
                user_name = #{set.userName,jdbcType=VARCHAR},
            </if>
            <if test="where.token == null and set.token != null and set.token != ''">
                token = #{set.token,jdbcType=VARCHAR},
            </if>
            <if test="where.expiratedTime == null and set.expiratedTime != null">
                expirated_time = #{set.expiratedTime,jdbcType=OTHER},
            </if>
        </set>
        <where>
            <if test="where.id != null">
                and id = #{where.id,jdbcType=INTEGER}
            </if>
            <if test="where.userId != null">
                and user_id = #{where.userId,jdbcType=INTEGER}
            </if>
            <if test="where.userName != null">
                and user_name = #{where.userName,jdbcType=VARCHAR}
            </if>
            <if test="where.token != null">
                and token = #{where.token,jdbcType=VARCHAR}
            </if>
            <if test="where.expiratedTime != null">
                and expirated_time = #{where.expiratedTime,jdbcType=OTHER}
            </if>
        </where>
    </update>

    <!--通过主键修改实体列表，列表长度不能为0，注意：当实体属性为null时，对应的列也会别更新为null-->
    <update id="updateBatch" parameterType="list">
        update user_token
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="id = case" suffix="end,">
                 <foreach collection="list" item="item" index="index">
                  when  id = #{item.id} then #{item.id}
                 </foreach>
            </trim>
            <trim prefix="user_id = case" suffix="end,">
                 <foreach collection="list" item="item" index="index">
                  when  id = #{item.id} then #{item.userId}
                 </foreach>
            </trim>
            <trim prefix="user_name = case" suffix="end,">
                 <foreach collection="list" item="item" index="index">
                  when  id = #{item.id} then #{item.userName}
                 </foreach>
            </trim>
            <trim prefix="token = case" suffix="end,">
                 <foreach collection="list" item="item" index="index">
                  when  id = #{item.id} then #{item.token}
                 </foreach>
            </trim>
            <trim prefix="expirated_time = case" suffix="end,">
                 <foreach collection="list" item="item" index="index">
                  when  id = #{item.id} then #{item.expiratedTime}
                 </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    
    <!--通过主键删除-->
    <delete id="deleteById" parameterType="java.lang.Long">
        delete from user_token where id= #{id,jdbcType=BIGINT}
    </delete>

    <!--通过实体非空属性删除-->
    <delete id="deleteByEntity" parameterType="com.byd.personnel.common.entity.UserTokenEntity">
        delete from user_token
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="userName != null">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="token != null">
                and token = #{token,jdbcType=VARCHAR}
            </if>
            <if test="expiratedTime != null">
                and expirated_time = #{expiratedTime,jdbcType=OTHER}
            </if>
        </where>
    </delete>
    
    <!--通过主键列表删除，列表长度不能为0-->
    <delete id="deleteByIds" parameterType="list">
        delete from user_token where id in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
            #{item}
        </foreach>
    </delete>
    
    <select id="countAll" resultType="int">
        select count(*) from user_token
    </select>
    
    <select id="countByEntity" parameterType="com.byd.personnel.common.entity.UserTokenEntity" resultType="int">
        select count(*) from user_token
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="userName != null">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="token != null">
                and token = #{token,jdbcType=VARCHAR}
            </if>
            <if test="expiratedTime != null">
                and expirated_time = #{expiratedTime,jdbcType=OTHER}
            </if>
        </where>
    </select>
</mapper>